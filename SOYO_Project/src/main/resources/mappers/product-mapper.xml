<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="productMapper">

	<resultMap id="productMap" type="product">
	  <result property="productNo" column="PRODUCT_NO"/>
	  <result property="productName" column="PRODUCT_NAME"/>
	  <result property="productPrice" column="PRODUCT_PRICE"/>
	  <result property="productOrigin" column="PRODUCT_ORIGIN"/>
	  <result property="productCaption" column="PRODUCT_CAPTION"/>
	  <result property="productChange" column="PRODUCT_CHANGE"/>
	  <result property="productCategory" column="PRODUCT_CATEGORY"/>
	  <result property="productSubCaption" column="PRODUCT_SUB_CAPTION"/>
	  <result property="productRegisteredDate" column="PRODUCT_REGISTERED_DATE"/>
	  <result property="status" column="STATUS"/>
	  <result property="productSort" column="PRODUCT_TAG"/>
	  <result property="productSubOrigin" column="PRODUCT_SUB_ORIGIN"/>
	  <result property="productSubChange" column="PRODUCT_SUB_CHANGE"/>
	  <result property="productCount" column="STOCK_COUNT"/>
	</resultMap>


  <select id="selectProductList" resultMap="productMap">
    SELECT *
    FROM PRODUCT
    WHERE STATUS = 'Y'
  </select>
  
  <select id="selectProductByNo" resultMap="productMap">
	  SELECT P.*, S.*
	  FROM PRODUCT P
	  JOIN PRODUCT_SIZE S ON P.PRODUCT_NO = S.PRODUCT_NO
	  WHERE P.PRODUCT_NO = #{productNo}
	    AND P.STATUS = 'Y'
  </select>
  
  <select id="selectTagsByProductNo" resultType="string">
     SELECT TAG_NAME
     FROM PRODUCT_TAG T
     WHERE PRODUCT_NO = #{productNo}
  </select>
  
  <select id="selectProductListByCategory" parameterType="String" resultMap="productMap">
    SELECT * FROM PRODUCT
    WHERE PRODUCT_CATEGORY = #{productCategory}
      AND STATUS = 'Y'
  </select>
  
	<select id="searchProductList" resultMap="productMap">
	  SELECT * FROM PRODUCT
	  WHERE STATUS = 'Y'
	  <if test="type != null and type != '' and type != 'all'">
	    AND PRODUCT_CATEGORY = 
	    <choose>
	      <when test="type == 'mens'"> '남성' </when>
	      <when test="type == 'womens'"> '여성' </when>
	      <when test="type == 'kids'"> '아동' </when>
	      <when test="type == 'accessory'"> '악세사리' </when>
	    </choose>
	  </if>
	  AND PRODUCT_NAME LIKE '%' || #{keyword} || '%'
	</select>

	<select id="selectProductListCount" resultType="_int">
		SELECT COUNT(*)
		FROM PRODUCT
		WHERE STATUS = 'Y'
	</select>
  
	<select id="selectProductListCountByCategory" parameterType="String" resultType="_int">
		SELECT COUNT(*) 
		FROM PRODUCT
		WHERE PRODUCT_CATEGORY = #{productCategory}
		AND STATUS = 'Y'
	</select>
  
	<select id="searchProductListCount" resultType="_int">
		SELECT COUNT(*)
		FROM PRODUCT
		WHERE STATUS = 'Y'
		<if test="type != null and type != '' and type != 'all'">
			AND PRODUCT_CATEGORY =
			<choose>
				<when test="type == 'mens'"> '남성' </when>
				<when test="type == 'womens'"> '여성' </when>
				<when test="type == 'kids'"> '아동' </when>
				<when test="type == 'accessory'"> '악세사리' </when>
			</choose>
		</if>
		AND PRODUCT_NAME LIKE '%' || #{keyword} || '%'
	</select>
	
	
	<select id="selectSortedProductList" resultMap="productMap" parameterType="map">
	    SELECT
	        P.PRODUCT_NO AS PRODUCT_NO,
	        P.PRODUCT_NAME AS PRODUCT_NAME,
	        P.PRODUCT_PRICE AS PRODUCT_PRICE,
	        P.PRODUCT_ORIGIN AS PRODUCT_ORIGIN,
	        P.PRODUCT_CAPTION AS PRODUCT_CAPTION,
	        P.PRODUCT_CHANGE AS PRODUCT_CHANGE,
	        P.PRODUCT_CATEGORY AS PRODUCT_CATEGORY,
	        P.PRODUCT_SUB_CAPTION AS PRODUCT_SUB_CAPTION,
	        P.PRODUCT_REGISTERED_DATE AS PRODUCT_REGISTERED_DATE,
	        P.STATUS AS STATUS,
	        P.PRODUCT_TAG AS PRODUCT_TAG,
	        P.PRODUCT_SUB_ORIGIN AS PRODUCT_SUB_ORIGIN,
	        P.PRODUCT_SUB_CHANGE AS PRODUCT_SUB_CHANGE
	    FROM PRODUCT P
	    LEFT JOIN (
	        SELECT PRODUCT_NO, COUNT(*) AS LIKE_COUNT
	        FROM WISH_LIST
	        GROUP BY PRODUCT_NO
	    ) L ON P.PRODUCT_NO = L.PRODUCT_NO
	    WHERE P.PRODUCT_CATEGORY = #{category}
	      AND P.STATUS = 'Y'
	    <choose>
	        <when test="sort == 'popular'">
	            ORDER BY NVL(L.LIKE_COUNT, 0) DESC
	        </when>
	        <when test="sort == 'latest'">
	            ORDER BY P.PRODUCT_REGISTERED_DATE DESC
	        </when>
	        <when test="sort == 'price-low'">
	            ORDER BY P.PRODUCT_PRICE ASC
	        </when>
	        <when test="sort == 'price-high'">
	            ORDER BY P.PRODUCT_PRICE DESC
	        </when>
	        <otherwise>
	            ORDER BY NVL(L.LIKE_COUNT, 0) DESC
	        </otherwise>
	    </choose>
	</select>


	<select id="selectInCartCount" resultType="_int">
	    SELECT COUNT(*) 
	    FROM CART
	    WHERE MEMBER_ID = #{memberId} 
	      AND PRODUCT_NO = #{productNo}
	</select>



</mapper>