<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="memberMapper">

	<!-- 
		MEMBER 테이블 각 컬럼값 -> 자바 Member 클래스 필드값으로 옮기기
	-->
	<resultMap type="member" id="memberResultSet">
		<id column="MEMBER_ID" property="memberId" />
		<result column="MEMBER_PWD" property="memberPwd" />
		<result column="MEMBER_NAME" property="memberName" />
		<result column="GENDER" property="gender" />
		<result column="BIRTH_DATE" property="birthDate" />
		<result column="EMAIL" property="email" />
		<result column="PHONE" property="phone" />
		<result column="ADDRESS" property="address" />
		<result column="ENROLL_DATE" property="enrollDate" />
		<result column="STATUS" property="status" />
	</resultMap>
	
	<resultMap id="deliveryResultSet" type="delivery">
		<result property="receiverName" column="RECEIVER_NAME"/>
		<result property="receiverPhone" column="RECEIVER_PHONE"/>
		<result property="memberName" column="MEMBER_NAME"/>
		<result property="productNo" column="PRODUCT_NO"/>
		<result property="productChange" column="PRODUCT_CHANGE"/>
		<result property="productName" column="PRODUCT_NAME"/>
		<result property="productCount" column="PRODUCT_COUNT"/>
		<result property="productPrice" column="PRODUCT_PRICE"/>
		<result property="deliveryDate" column="DELIVERY_DATE"/>
		<result property="orderStatus" column="ORDER_STATUS"/>
		<result property="orderImpNo" column="ORDER_IMPNO"/>
		<result property="addressOther" column="ADDRESS_OTHER"/>
		<result property="addressName" column="ADDRESS_NAME"/>
		<result property="totalPrice" column="TOTAL_PRICE"/>
		<result property="orderDate" column="ORDER_DATE"/>
	</resultMap>
	
	<!-- 리뷰용 resultmap -->
	<resultMap id="reviewResultMap" type="review">
	    <result property="reviewNo" column="REVIEW_NO"/>
	    <result property="reviewTitle" column="REVIEW_TITLE"/>
	    <result property="reviewContent" column="REVIEW_CONTENT"/>
	    <result property="rating" column="RATING"/>
	    <result property="reviewThumbnailOrigin" column="REVIEW_THUMBNAIL_ORIGIN"/>
	    <result property="reviewThumbnailChange" column="REVIEW_THUMBNAIL_CHANGE"/>
	    <result property="reviewDate" column="REVIEW_DATE"/>
	    <result property="status" column="STATUS"/>
	    <result property="productNo" column="PRODUCT_NO"/>
	    <result property="productName" column="PRODUCT_NAME"/>
	    <result property="memberId" column="MEMBER_ID"/>
	    <result property="memberName" column="MEMBER_NAME"/>
	    <result property="productChange" column="PRODUCT_CHANGE"/>
	</resultMap>
	
	<resultMap id="wishResultMap" type="wish">
		<result property="productNo" column="PRODUCT_NO" />
		<result property="memberId" column="MEMBER_ID" />
		<result property="productName" column="PRODUCT_NAME"/>
		<result property="productPrice" column="PRODUCT_PRICE"/>
		<result property="productCategory" column="PRODUCT_CATEGORY"/>
		<result property="productOrigin" column="PRODUCT_ORIGIN"/>
		<result property="productChange" column="PRODUCT_CHANGE"/>
		<result property="productSize" column="PRODUCT_SIZE"/>
		<result property="stockCount" column="STOCK_COUNT"/>
	</resultMap>

	<resultMap id="productMap" type="product">
	  <result property="productNo" column="PRODUCT_NO"/>
	  <result property="productName" column="PRODUCT_NAME"/>
	  <result property="productPrice" column="PRODUCT_PRICE"/>
	  <result property="productOrigin" column="PRODUCT_ORIGIN"/>
	  <result property="productCaption" column="PRODUCT_CAPTION"/>
	  <result property="productChange" column="PRODUCT_CHANGE"/>
	  <result property="productCategory" column="PRODUCT_CATEGORY"/>
	  <result property="productSubCaption" column="PRODUCT_SUB_CAPTION"/>
	  <result property="productRegisteredDate" column="PRODUCT_REGISTERED_DATE"/>
	  <result property="status" column="STATUS"/>
	  <result property="productSort" column="PRODUCT_TAG"/>
	  <result property="productSubOrigin" column="PRODUCT_SUB_ORIGIN"/>
	  <result property="productSubChange" column="PRODUCT_SUB_CHANGE"/>
	  <result property="productCount" column="PRODUCT_COUNT"/>
	  <result property="productSize" column="PRODUCT_SIZE"/>
	  <result property="orderImpNo" column="ORDER_IMPNO"/>
	</resultMap>

	<!-- 로그인용 쿼리문 -->
	<select id="loginMember" parameterType="member"
							 resultMap="memberResultSet">
		SELECT *
		  FROM MEMBER
		 WHERE MEMBER_ID = #{memberId}
		   AND MEMBER_PWD = #{memberPwd}
		   AND STATUS = 'Y'
	</select>
	
	<!-- 회원정보 수정용 쿼리문 -->
	<update id="updateMember" parameterType="member">
		UPDATE MEMBER
			   SET MEMBER_NAME = #{memberName}
	             , GENDER = #{gender}
	             , BIRTH_DATE = #{birthDate}
			     , PHONE = #{phone}
			     , ADDRESS = #{address}
			 WHERE MEMBER_ID = #{memberId}
			   AND STATUS = 'Y'
	</update>
	
	<!-- 회원 삭제용 쿼리문 -->
	<update id="deleteMember" parameterType="string">
		UPDATE MEMBER SET STATUS = 'N'
		    WHERE MEMBER_ID = #{memberId}
		    AND STATUS = 'Y'
	</update>
	
	<!-- 비밀번호 변경용 쿼리문 -->
	<update id="updatePwd" parameterType="hashmap">
		UPDATE MEMBER SET MEMBER_PWD = #{updatePwd}
		    WHERE MEMBER_ID = #{memberId}
		    AND STATUS = 'Y'
	</update>
	

	<!-- 아이디 중복 확인용 쿼리문 -->
	<select id="checkId" parameterType="string" resultType="_int">
	
		SELECT COUNT(*) FROM MEMBER
    	WHERE MEMBER_ID = #{checkId}
    	
	</select>
	
	<select id="orderProduct" parameterType="hashmap" resultMap="deliveryResultSet">
	SELECT *
		FROM (
			SELECT ROWNUM RNUM,A.*
			FROM(
				SELECT RECEIVER_NAME,
					   RECEIVER_PHONE,
					   O.ADDRESS AS ADDRESS_OTHER,
					   ADDRESS_ALIAS,
					   TOTAL_PRICE,
					   ORDER_IMPNO,
					   DELIVERY_DATE,
					   REQUEST_MSG
				FROM ORDER_TB O
				JOIN MEMBER M ON M.MEMBER_ID=O.MEMBER_ID
				WHERE O.MEMBER_ID=#{memberId}
				) A
			)
		WHERE RNUM BETWEEN #{startRow} AND #{endRow}
    
	</select>
	
	<!-- 회원가입용 쿼리문 -->
	<insert id="insertMember" parameterType="member">
		INSERT INTO MEMBER(MEMBER_ID
                 , MEMBER_PWD
                 , MEMBER_NAME
                 , GENDER
                 , BIRTH_DATE
                 , EMAIL
                 , PHONE
                 , ADDRESS)
        VALUES(#{memberId}
             , #{memberPwd}
             , #{memberName}
             , #{gender}
             , #{birthDate}
             , #{email}
             , #{phone}
             , #{address})
	</insert>
	
	<!-- 아이디 찾기용 쿼리문 -->
	<select id="findId" parameterType="member" resultType="string">
		SELECT MEMBER_ID FROM MEMBER
		    WHERE MEMBER_NAME = #{memberName}
		      AND BIRTH_DATE = #{birthDate}
		      AND EMAIL = #{email}
		      AND PHONE = #{phone}
		      AND STATUS = 'Y'
	</select>
	
	<!-- 아이디로 유저 찾기 -->
	<select id="selectMember" resultMap="memberResultSet">
	  SELECT * FROM MEMBER
	  WHERE MEMBER_ID = #{memberId} AND STATUS = 'Y'
	</select>
	
	<!-- 비밀번호 재발급및 변경(기존에 있던 비번변경은 해시맵 타입이라 재활용 불가(바꾸기엔 늦었다)) -->
	<update id="newRandomPwd" parameterType="member">
		UPDATE MEMBER SET MEMBER_PWD = #{memberPwd}
		    WHERE MEMBER_ID = #{memberId}
		    AND STATUS = 'Y'
	</update>
	
	<!-- 이메일 뽑아오기 -->
	<select id="findEmail" parameterType="member" resultType="string">
		SELECT EMAIL FROM MEMBER
		    WHERE MEMBER_ID = #{memberId}
		    AND STATUS = 'Y'
	</select>
	
	<!-- 내 리뷰 총 갯수 가져오기 -->
	<select id="myReviewCount" resultType="_int">
		SELECT COUNT(*) FROM REVIEW
		    WHERE STATUS = 'Y'
		      AND MEMBER_ID = #{memberId}
	</select>
	

	<!-- 회원의 리뷰 가져오기 -->
	<select id="myReview" parameterType="string" resultMap="reviewResultMap">
		SELECT
	        R.REVIEW_NO,
	        R.REVIEW_TITLE,
	        R.REVIEW_CONTENT,
	        R.RATING,
	        R.REVIEW_THUMBNAIL_ORIGIN,
	        R.REVIEW_THUMBNAIL_CHANGE,
	        R.REVIEW_DATE,
	        R.STATUS,
	        R.PRODUCT_NO,
	        P.PRODUCT_NAME,
	        P.PRODUCT_CHANGE
	    FROM REVIEW R
	    JOIN PRODUCT P ON R.PRODUCT_NO = P.PRODUCT_NO
	    WHERE R.MEMBER_ID = #{memberd}
	      AND R.STATUS = 'Y'
	    ORDER BY R.REVIEW_DATE DESC
	</select>

	<select id="orderProductList" parameterType="string" resultMap="productMap">
  	SELECT
		   PRODUCT_NO,
           ORDER_IMPNO
	  FROM PAYMENT 
	 WHERE ORDER_IMPNO = #{orderImpNo}
	</select>
	
	<!-- 내 찜 목록 갯수 -->
	<select id="myWishListCount" resultType="_int">
		SELECT COUNT(*) FROM WISH_LIST
		      WHERE MEMBER_ID = #{memberId}
	</select>
	
	<!-- 내 찜 목록 -->
	<select id="myWishList" parameterType="string" resultMap="wishResultMap">
		SELECT W.PRODUCT_NO
		     , P.PRODUCT_NAME
		     , P.PRODUCT_PRICE
		     , P.PRODUCT_ORIGIN
		     , P.PRODUCT_CHANGE
		     , P.PRODUCT_CATEGORY
		     , W.PRODUCT_SIZE
		     , NVL(S.STOCK_COUNT, 0)
		    FROM PRODUCT P
		    JOIN WISH_LIST W ON P.PRODUCT_NO = W.PRODUCT_NO
		    LEFT OUTER JOIN PRODUCT_SIZE S ON W.PRODUCT_NO = S.PRODUCT_NO AND W.PRODUCT_SIZE = S.PRODUCT_SIZE
		    WHERE W.MEMBER_ID = #{memberId}
	</select>
	
	<select id="myWishListSize" parameterType="wish" resultMap="wishResultMap">
		SELECT PRODUCT_SIZE FROM WISH_LIST
		    WHERE MEMBER_ID = #{memberId}
		      AND PRODUCT_NO = #{productNo}
	</select>
	
	<select id="listPageCount" parameterType="string" resultType="_int">
		SELECT COUNT(*)
		  FROM ORDER_TB O
		  JOIN MEMBER M ON M.MEMBER_ID=O.MEMBER_ID
		 WHERE O.MEMBER_ID=#{memberId}		
	</select>
	
	<select id="productCount" parameterType="string" resultType="_int">
		SELECT COUNT(*)
		  FROM PAYMENT
		 WHERE ORDER_IMPNO=#{orderImpNo}
	</select>

	<select id="myProduct" parameterType="product" resultMap="productMap">
	
		SELECT PRODUCT_CHANGE
		       ,PRODUCT_NAME
		       ,PRODUCT_PRICE
		       ,PRODUCT_COUNT
		  FROM PAYMENT P
		  JOIN PRODUCT PD ON PD.PRODUCT_NO = P.PRODUCT_NO
		  WHERE P.ORDER_IMPNO =#{orderImpNo}
		  AND P.PRODUCT_NO=#{productNo}
	</select>
		
</mapper>