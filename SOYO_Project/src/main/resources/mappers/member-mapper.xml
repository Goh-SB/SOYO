<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="memberMapper">

	<!-- 
		MEMBER 테이블 각 컬럼값 -> 자바 Member 클래스 필드값으로 옮기기
	-->
	<resultMap type="member" id="memberResultSet">
		<id column="MEMBER_ID" property="memberId" />
		<result column="MEMBER_PWD" property="memberPwd" />
		<result column="MEMBER_NAME" property="memberName" />
		<result column="GENDER" property="gender" />
		<result column="BIRTH_DATE" property="birthDate" />
		<result column="EMAIL" property="email" />
		<result column="PHONE" property="phone" />
		<result column="ADDRESS" property="address" />
		<result column="ENROLL_DATE" property="enrollDate" />
		<result column="STATUS" property="status" />
	</resultMap>
	
	<resultMap id="deliveryResultSet" type="com.kh.soyo.product.model.vo.Product">
		<result property="receiverName" column="RECEIVER_NAME"/>
		<result property="receiverPhone" column="RECEIVER_PHONE"/>
		<result property="memberName" column="MEMBER_NAME"/>
		<result property="productNo" column="PRODUCT_NO"/>
		<result property="productChange" column="PRODUCT_CHANGE"/>
		<result property="productName" column="PRODUCT_NAME"/>
		<result property="productCount" column="PRODUCT_COUNT"/>
		<result property="productPrice" column="PRODUCT_PRICE"/>
		<result property="deliveryDate" column="DELIVERY_DATE"/>
		<result property="orderStatus" column="ORDER_STATUS"/>
		<result property="orderImpNo" column="ORDER_IMPNO"/>
		<result property="addressOther" column="ADDRESS_OTHER"/>
		<result property="addressName" column="ADDRESS_NAME"/>
		<result property="totalPrice" column="TOTAL_PRICE"/>
		<result property="orderDate" column="ORDER_DATE"/>
	</resultMap>
	
	<!-- 리뷰용 resultmap -->
	<resultMap id="reviewResultMap" type="review">
	    <result property="reviewNo" column="REVIEW_NO"/>
	    <result property="reviewTitle" column="REVIEW_TITLE"/>
	    <result property="reviewContent" column="REVIEW_CONTENT"/>
	    <result property="rating" column="RATING"/>
	    <result property="reviewThumbnailOrigin" column="REVIEW_THUMBNAIL_ORIGIN"/>
	    <result property="reviewThumbnailChange" column="REVIEW_THUMBNAIL_CHANGE"/>
	    <result property="reviewDate" column="REVIEW_DATE"/>
	    <result property="status" column="STATUS"/>
	    <result property="productNo" column="PRODUCT_NO"/>
	    <result property="productName" column="PRODUCT_NAME"/>
	    <result property="memberId" column="MEMBER_ID"/>
	    <result property="memberName" column="MEMBER_NAME"/>
	    <result property="productChange" column="PRODUCT_CHANGE"/>
	</resultMap>

	<!-- 로그인용 쿼리문 -->
	<select id="loginMember" parameterType="member"
							 resultMap="memberResultSet">
		SELECT *
		  FROM MEMBER
		 WHERE MEMBER_ID = #{memberId}
		   AND MEMBER_PWD = #{memberPwd}
		   AND STATUS = 'Y'
	</select>
	
	<!-- 회원정보 수정용 쿼리문 -->
	<update id="updateMember" parameterType="member">
		UPDATE MEMBER
			   SET MEMBER_NAME = #{memberName}
	             , GENDER = #{gender}
	             , BIRTH_DATE = #{birthDate}
			     , PHONE = #{phone}
			     , ADDRESS = #{address}
			 WHERE MEMBER_ID = #{memberId}
			   AND STATUS = 'Y'
	</update>
	
	<!-- 회원 삭제용 쿼리문 -->
	<update id="deleteMember" parameterType="string">
		UPDATE MEMBER SET STATUS = 'N'
		    WHERE MEMBER_ID = #{memberId}
		    AND STATUS = 'Y'
	</update>
	
	<!-- 비밀번호 변경용 쿼리문 -->
	<update id="updatePwd" parameterType="hashmap">
		UPDATE MEMBER SET MEMBER_PWD = #{updatePwd}
		    WHERE MEMBER_ID = #{memberId}
		    AND STATUS = 'Y'
	</update>
	

	<!-- 아이디 중복 확인용 쿼리문 -->
	<select id="checkId" parameterType="string" resultType="_int">
	
		SELECT COUNT(*) FROM MEMBER
    	WHERE MEMBER_ID = #{checkId}
    	
	</select>
	
	<select id="orderProduct" parameterType="string" resultMap="deliveryResultSet">
    SELECT D.RECEIVER_NAME,
           D.RECEIVER_PHONE,
           D.ADDRESS_NAME,
           D.ADDRESS_OTHER,
           O.TOTAL_PRICE,
           O.ORDER_DATE,
           O.ORDER_IMPNO,
           P.PRODUCT_NO,
           P.PRODUCT_CHANGE,
           P.PRODUCT_NAME,
           P.PRODUCT_PRICE,
           PAY.PRODUCT_COUNT
    FROM ORDER_TB O
    JOIN DELIVERY_ADDRESS D ON D.MEMBER_ID = O.MEMBER_ID
    JOIN PAYMENT PAY ON PAY.ORDER_IMPNO = O.ORDER_IMPNO
    JOIN PRODUCT P ON P.PRODUCT_NO = PAY.PRODUCT_NO
    WHERE O.MEMBER_ID = #{memberId}
      AND O.RECEIVER_NAME = D.RECEIVER_NAME
    ORDER BY O.ORDER_IMPNO DESC
</select>
	
	<!-- 회원가입용 쿼리문 -->
	<insert id="insertMember" parameterType="member">
		INSERT INTO MEMBER(MEMBER_ID
                 , MEMBER_PWD
                 , MEMBER_NAME
                 , GENDER
                 , BIRTH_DATE
                 , EMAIL
                 , PHONE
                 , ADDRESS)
        VALUES(#{memberId}
             , #{memberPwd}
             , #{memberName}
             , #{gender}
             , #{birthDate}
             , #{email}
             , #{phone}
             , #{address})
	</insert>
	
	<!-- 아이디 찾기용 쿼리문 -->
	<select id="findId" parameterType="member" resultType="string">
		SELECT MEMBER_ID FROM MEMBER
		    WHERE MEMBER_NAME = #{memberName}
		      AND BIRTH_DATE = #{birthDate}
		      AND EMAIL = #{email}
		      AND PHONE = #{phone}
		      AND STATUS = 'Y'
	</select>
	
	<!-- 아이디로 유저 찾기 -->
	<select id="selectMember" resultMap="memberResultSet">
	  SELECT * FROM MEMBER
	  WHERE MEMBER_ID = #{memberId} AND STATUS = 'Y'
	</select>
	
	<!-- 비밀번호 재발급및 변경(기존에 있던 비번변경은 해시맵 타입이라 재활용 불가(바꾸기엔 늦었다)) -->
	<update id="newRandomPwd" parameterType="member">
		UPDATE MEMBER SET MEMBER_PWD = #{memberPwd}
		    WHERE MEMBER_ID = #{memberId}
		    AND STATUS = 'Y'
	</update>
	
	<!-- 이메일 뽑아오기 -->
	<select id="findEmail" parameterType="member" resultType="string">
		SELECT EMAIL FROM MEMBER
		    WHERE MEMBER_ID = #{memberId}
		    AND STATUS = 'Y'
	</select>
	
	<!-- 내 리뷰 총 갯수 가져오기 -->
	<select id="myReviewCount" resultType="_int">
		SELECT COUNT(*) FROM REVIEW
		    WHERE STATUS = 'Y'
		      AND MEMBER_ID = #{memberId}
	</select>
	

	<!-- 회원의 리뷰 가져오기 -->
	<select id="myReview" parameterType="string" resultMap="reviewResultMap">
		SELECT
	        R.REVIEW_NO,
	        R.REVIEW_TITLE,
	        R.REVIEW_CONTENT,
	        R.RATING,
	        R.REVIEW_THUMBNAIL_ORIGIN,
	        R.REVIEW_THUMBNAIL_CHANGE,
	        R.REVIEW_DATE,
	        R.STATUS,
	        R.PRODUCT_NO,
	        P.PRODUCT_NAME
	    FROM REVIEW R
	    JOIN PRODUCT P ON R.PRODUCT_NO = P.PRODUCT_NO
	    WHERE R.MEMBER_ID = #{memberd}
	      AND R.STATUS = 'Y'
	    ORDER BY R.REVIEW_DATE DESC
	</select>

	<select id="orderProductList" parameterType="string" resultMap="deliveryResultSet">
	SELECT PD.PRODUCT_NAME,
	       PD.PRODUCT_PRICE,
	       P.PRODUCT_COUNT,
	       PD.PRODUCT_CHANGE  
	  FROM PAYMENT P
	  JOIN PRODUCT PD ON P.PRODUCT_NO = PD.PRODUCT_NO
	 WHERE P.ORDER_IMPNO = #{orderImpNo}
</select>

		
</mapper>